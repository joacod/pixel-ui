/*! tailwindcss v4.1.14 | MIT License | https://tailwindcss.com */
@import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap');
@layer properties;
:root,
:host {
  --color-nes-black: #000000;
  --color-nes-gray: #a1a1a1;
  --color-nes-blue-dark: #00237c;
  --color-nes-green-dark: #093e00;
  --color-nes-primary: #3337fe;
  --color-nes-secondary: #f15bfe;
  --color-nes-accent: #51df21;
  --color-nes-error: #fe7269;
  --color-nes-warning: #adb600;
  --color-nes-success: #51df21;
  --font-family-pixel: 'Press Start 2P', monospace;
  --spacing-px: 1px;
  --spacing-1: 8px;
  --spacing-2: 16px;
  --spacing-3: 24px;
  --spacing-4: 32px;
  --spacing-6: 48px;
  --spacing-8: 64px;
  --height-xs: 16px;
  --height-sm: 24px;
  --height-md: 32px;
  --height-lg: 40px;
  --height-xl: 48px;
  --border-width-2: 2px;
  --font-sans: ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji',
    'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
    'Liberation Mono', 'Courier New', monospace;
  --color-blue-500: oklch(62.3% 0.214 259.815);
  --color-gray-500: oklch(55.1% 0.027 264.364);
  --color-black: #000;
  --color-white: #fff;
  --text-xs: 0.75rem;
  --text-xs--line-height: calc(1 / 0.75);
  --text-sm: 0.875rem;
  --text-sm--line-height: calc(1.25 / 0.875);
  --text-base: 1rem;
  --text-base--line-height: calc(1.5 / 1);
  --text-lg: 1.125rem;
  --text-lg--line-height: calc(1.75 / 1.125);
  --text-xl: 1.25rem;
  --text-xl--line-height: calc(1.75 / 1.25);
  --font-weight-bold: 700;
  --default-font-family: var(--font-sans);
  --default-mono-font-family: var(--font-mono);
}
@layer theme, base, components, utilities;
@layer theme;
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html,
  :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(
      --default-font-family,
      ui-sans-serif,
      system-ui,
      sans-serif,
      'Apple Color Emoji',
      'Segoe UI Emoji',
      'Segoe UI Symbol',
      'Noto Color Emoji'
    );
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b,
  strong {
    font-weight: bolder;
  }
  code,
  kbd,
  samp,
  pre {
    font-family: var(
      --default-mono-font-family,
      ui-monospace,
      SFMono-Regular,
      Menlo,
      Monaco,
      Consolas,
      'Liberation Mono',
      'Courier New',
      monospace
    );
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(
      --default-mono-font-variation-settings,
      normal
    );
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub,
  sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol,
  ul,
  menu {
    list-style: none;
  }
  img,
  svg,
  video,
  canvas,
  audio,
  iframe,
  embed,
  object {
    display: block;
    vertical-align: middle;
  }
  img,
  video {
    max-width: 100%;
    height: auto;
  }
  button,
  input,
  select,
  optgroup,
  textarea,
  ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button)) or
    (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit,
  ::-webkit-datetime-edit-year-field,
  ::-webkit-datetime-edit-month-field,
  ::-webkit-datetime-edit-day-field,
  ::-webkit-datetime-edit-hour-field,
  ::-webkit-datetime-edit-minute-field,
  ::-webkit-datetime-edit-second-field,
  ::-webkit-datetime-edit-millisecond-field,
  ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button,
  input:where([type='button'], [type='reset'], [type='submit']),
  ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button,
  ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden='until-found'])) {
    display: none !important;
  }
}
@layer utilities {
  .pointer-events-none {
    pointer-events: none;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline-flex {
    display: inline-flex;
  }
  .h-6 {
    height: var(--spacing-6);
  }
  .h-full {
    height: 100%;
  }
  .h-lg {
    height: var(--height-lg);
  }
  .h-md {
    height: var(--height-md);
  }
  .h-sm {
    height: var(--height-sm);
  }
  .h-xl {
    height: var(--height-xl);
  }
  .h-xs {
    height: var(--height-xs);
  }
  .w-6 {
    width: var(--spacing-6);
  }
  .w-full {
    width: 100%;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .cursor-wait {
    cursor: wait;
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-1 {
    gap: var(--spacing-1);
  }
  .gap-2 {
    gap: var(--spacing-2);
  }
  .gap-3 {
    gap: var(--spacing-3);
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: var(--border-width-2);
  }
  .border-current {
    border-color: currentcolor;
  }
  .border-nes-black {
    border-color: var(--color-nes-black);
  }
  .border-nes-error {
    border-color: var(--color-nes-error);
  }
  .border-nes-secondary {
    border-color: var(--color-nes-secondary);
  }
  .bg-blue-500 {
    background-color: var(--color-blue-500);
  }
  .bg-gray-500 {
    background-color: var(--color-gray-500);
  }
  .bg-nes-accent {
    background-color: var(--color-nes-accent);
  }
  .bg-nes-error {
    background-color: var(--color-nes-error);
  }
  .bg-nes-primary {
    background-color: var(--color-nes-primary);
  }
  .bg-nes-secondary {
    background-color: var(--color-nes-secondary);
  }
  .bg-nes-success {
    background-color: var(--color-nes-success);
  }
  .bg-nes-warning {
    background-color: var(--color-nes-warning);
  }
  .bg-transparent {
    background-color: transparent;
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .px-2 {
    padding-inline: var(--spacing-2);
  }
  .px-3 {
    padding-inline: var(--spacing-3);
  }
  .px-4 {
    padding-inline: var(--spacing-4);
  }
  .px-6 {
    padding-inline: var(--spacing-6);
  }
  .px-8 {
    padding-inline: var(--spacing-8);
  }
  .py-1 {
    padding-block: var(--spacing-1);
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .text-black {
    color: var(--color-black);
  }
  .text-nes-black {
    color: var(--color-nes-black);
  }
  .text-nes-error {
    color: var(--color-nes-error);
  }
  .text-white {
    color: var(--color-white);
  }
  .opacity-75 {
    opacity: 75%;
  }
  .shadow-\[2px_2px_0_0_theme\(colors\.nes\.black\)\] {
    --tw-shadow: 2px 2px 0 0 var(--tw-shadow-color, #000000);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-\[2px_2px_0_0_theme\(colors\.nes\.error\)\] {
    --tw-shadow: 2px 2px 0 0 var(--tw-shadow-color, #fe7269);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-\[2px_2px_0_0_theme\(colors\.nes\.secondary\)\] {
    --tw-shadow: 2px 2px 0 0 var(--tw-shadow-color, #f15bfe);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .transition-none {
    transition-property: none;
  }
  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }
  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }
  .placeholder\:text-nes-gray {
    &::placeholder {
      color: var(--color-nes-gray);
    }
  }
  .read-only\:cursor-default {
    &:read-only {
      cursor: default;
    }
  }
  .read-only\:bg-nes-gray\/10 {
    &:read-only {
      background-color: color-mix(in srgb, #a1a1a1 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(
          in oklab,
          var(--color-nes-gray) 10%,
          transparent
        );
      }
    }
  }
  .hover\:bg-nes-blue-dark {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-nes-blue-dark);
      }
    }
  }
  .hover\:bg-nes-gray\/10 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #a1a1a1 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(
            in oklab,
            var(--color-nes-gray) 10%,
            transparent
          );
        }
      }
    }
  }
  .hover\:bg-nes-green-dark {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-nes-green-dark);
      }
    }
  }
  .hover\:text-white {
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .hover\:brightness-90 {
    &:hover {
      @media (hover: hover) {
        --tw-brightness: brightness(90%);
        filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
          var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert)
          var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
      }
    }
  }
  .focus\:border-nes-error {
    &:focus {
      border-color: var(--color-nes-error);
    }
  }
  .focus\:border-nes-primary {
    &:focus {
      border-color: var(--color-nes-primary);
    }
  }
  .focus\:border-nes-secondary {
    &:focus {
      border-color: var(--color-nes-secondary);
    }
  }
  .focus\:shadow-\[2px_2px_0_0_theme\(colors\.nes\.error\)\] {
    &:focus {
      --tw-shadow: 2px 2px 0 0 var(--tw-shadow-color, #fe7269);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
        var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:shadow-\[2px_2px_0_0_theme\(colors\.nes\.primary\)\] {
    &:focus {
      --tw-shadow: 2px 2px 0 0 var(--tw-shadow-color, #3337fe);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
        var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:shadow-\[2px_2px_0_0_theme\(colors\.nes\.secondary\)\] {
    &:focus {
      --tw-shadow: 2px 2px 0 0 var(--tw-shadow-color, #f15bfe);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
        var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:outline-none {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .focus-visible\:ring-2 {
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
        calc(2px + var(--tw-ring-offset-width))
        var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
        var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus-visible\:ring-nes-primary {
    &:focus-visible {
      --tw-ring-color: var(--color-nes-primary);
    }
  }
  .focus-visible\:ring-offset-2 {
    &:focus-visible {
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
        var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .active\:translate-y-px {
    &:active {
      --tw-translate-y: 1px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .active\:translate-y-px {
    &:active {
      --tw-translate-y: var(--spacing-px);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .disabled\:cursor-not-allowed {
    &:disabled {
      cursor: not-allowed;
    }
  }
  .disabled\:opacity-50 {
    &:disabled {
      opacity: 50%;
    }
  }
  .data-\[checked\]\:border-nes-primary {
    &[data-checked] {
      border-color: var(--color-nes-primary);
    }
  }
  .data-\[checked\]\:bg-nes-primary {
    &[data-checked] {
      background-color: var(--color-nes-primary);
    }
  }
  .data-\[checked\]\:shadow-\[2px_2px_0_0_theme\(colors\.nes\.primary\)\] {
    &[data-checked] {
      --tw-shadow: 2px 2px 0 0 var(--tw-shadow-color, #3337fe);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
        var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .data-\[disabled\]\:cursor-not-allowed {
    &[data-disabled] {
      cursor: not-allowed;
    }
  }
  .data-\[disabled\]\:opacity-50 {
    &[data-disabled] {
      opacity: 50%;
    }
  }
  .hover\:data-\[disabled\]\:shadow-\[2px_2px_0_0_theme\(colors\.nes\.black\)\] {
    &:hover {
      @media (hover: hover) {
        &[data-disabled] {
          --tw-shadow: 2px 2px 0 0 var(--tw-shadow-color, #000000);
          box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
            var(--tw-shadow);
        }
      }
    }
  }
  .data-\[indeterminate\]\:border-nes-secondary {
    &[data-indeterminate] {
      border-color: var(--color-nes-secondary);
    }
  }
  .data-\[indeterminate\]\:bg-nes-secondary {
    &[data-indeterminate] {
      background-color: var(--color-nes-secondary);
    }
  }
  .data-\[indeterminate\]\:shadow-\[2px_2px_0_0_theme\(colors\.nes\.secondary\)\] {
    &[data-indeterminate] {
      --tw-shadow: 2px 2px 0 0 var(--tw-shadow-color, #f15bfe);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
        var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .data-\[invalid\]\:border-nes-error {
    &[data-invalid] {
      border-color: var(--color-nes-error);
    }
  }
  .data-\[invalid\]\:text-nes-error {
    &[data-invalid] {
      color: var(--color-nes-error);
    }
  }
  .data-\[readonly\]\:cursor-default {
    &[data-readonly] {
      cursor: default;
    }
  }
}
@layer base {
  img,
  canvas {
    image-rendering: pixelated;
    image-rendering: -moz-crisp-edges;
    image-rendering: crisp-edges;
  }
  body,
  html {
    -webkit-font-smoothing: none;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeSpeed;
  }
}
@layer utilities {
  .font-pixel {
    font-family: var(--font-family-pixel);
  }
  .pixel-render {
    image-rendering: pixelated;
    image-rendering: -moz-crisp-edges;
    image-rendering: crisp-edges;
  }
  .pixel-text {
    -webkit-font-smoothing: none;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeSpeed;
  }
  .pixel-instant {
    transition: none !important;
  }
  .pixel-border {
    box-shadow: 2px 0 0 0 currentColor, 0 2px 0 0 currentColor,
      -2px 0 0 0 currentColor, 0 -2px 0 0 currentColor;
  }
  .pixel-border-3d {
    box-shadow: -4px -4px 0 0 rgb(255 255 255 / 0.3),
      4px 4px 0 0 rgb(0 0 0 / 0.3), -4px 0 0 0 rgb(255 255 255 / 0.3),
      0 -4px 0 0 rgb(255 255 255 / 0.3), 4px 0 0 0 rgb(0 0 0 / 0.3),
      0 4px 0 0 rgb(0 0 0 / 0.3);
  }
}
@property --tw-border-style {
  syntax: '*';
  inherits: false;
  initial-value: solid;
}
@property --tw-leading {
  syntax: '*';
  inherits: false;
}
@property --tw-font-weight {
  syntax: '*';
  inherits: false;
}
@property --tw-shadow {
  syntax: '*';
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: '*';
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: '<percentage>';
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: '*';
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: '*';
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: '<percentage>';
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: '*';
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: '*';
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: '*';
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: '*';
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: '*';
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: '<length>';
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: '*';
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: '*';
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-blur {
  syntax: '*';
  inherits: false;
}
@property --tw-brightness {
  syntax: '*';
  inherits: false;
}
@property --tw-contrast {
  syntax: '*';
  inherits: false;
}
@property --tw-grayscale {
  syntax: '*';
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: '*';
  inherits: false;
}
@property --tw-invert {
  syntax: '*';
  inherits: false;
}
@property --tw-opacity {
  syntax: '*';
  inherits: false;
}
@property --tw-saturate {
  syntax: '*';
  inherits: false;
}
@property --tw-sepia {
  syntax: '*';
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: '*';
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: '*';
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: '<percentage>';
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: '*';
  inherits: false;
}
@property --tw-translate-x {
  syntax: '*';
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: '*';
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: '*';
  inherits: false;
  initial-value: 0;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or
    ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
    *,
    ::before,
    ::after,
    ::backdrop {
      --tw-border-style: solid;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
    }
  }
}
