/*! tailwindcss v4.1.14 | MIT License | https://tailwindcss.com */
@layer properties;
:root, :host {
  --color-nes-black: #000000;
  --color-nes-gray-dark: #585858;
  --color-nes-gray: #a1a1a1;
  --color-nes-white: #ffffff;
  --color-nes-primary: #3337fe;
  --color-nes-primary-hover: #00237c;
  --color-nes-secondary: #f15bfe;
  --color-nes-secondary-hover: #c92ed9;
  --color-nes-accent: #51df21;
  --color-nes-accent-hover: #093e00;
  --color-nes-error: #fe7269;
  --color-nes-error-hover: #d64339;
  --color-nes-warning: #adb600;
  --color-nes-warning-hover: #7d8400;
  --color-nes-success: #7fff7f;
  --color-nes-success-hover: #51df21;
  --font-family-pixel: 'Unifontex', monospace;
  --spacing-px: 1px;
  --spacing-0: 0;
  --spacing-1: 8px;
  --spacing-2: 16px;
  --spacing-3: 24px;
  --spacing-4: 32px;
  --spacing-5: 40px;
  --spacing-6: 48px;
  --spacing-7: 56px;
  --spacing-8: 64px;
  --spacing-10: 80px;
  --spacing-12: 96px;
  --spacing-16: 128px;
  --height-xs: 16px;
  --height-sm: 24px;
  --height-md: 32px;
  --height-lg: 40px;
  --height-xl: 48px;
  --border-width-2: 2px;
  --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
  --color-blue-500: oklch(62.3% 0.214 259.815);
  --color-gray-500: oklch(55.1% 0.027 264.364);
  --color-black: #000;
  --color-white: #fff;
  --spacing: 0.25rem;
  --text-xs: 0.75rem;
  --text-xs--line-height: calc(1 / 0.75);
  --text-sm: 0.875rem;
  --text-sm--line-height: calc(1.25 / 0.875);
  --text-base: 1rem;
  --text-base--line-height: calc(1.5 / 1);
  --text-lg: 1.125rem;
  --text-lg--line-height: calc(1.75 / 1.125);
  --text-xl: 1.25rem;
  --text-xl--line-height: calc(1.75 / 1.25);
  --font-weight-bold: 700;
  --default-font-family: var(--font-sans);
  --default-mono-font-family: var(--font-mono);
}
@layer theme, base, components, utilities;
@layer theme;
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .pointer-events-none {
    pointer-events: none;
  }
  .relative {
    position: relative;
  }
  .z-50 {
    z-index: 50;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline-flex {
    display: inline-flex;
  }
  .aspect-square {
    aspect-ratio: 1 / 1;
  }
  .h-3 {
    height: var(--spacing-3);
  }
  .h-4 {
    height: var(--spacing-4);
  }
  .h-5 {
    height: var(--spacing-5);
  }
  .h-6 {
    height: var(--spacing-6);
  }
  .h-7 {
    height: var(--spacing-7);
  }
  .h-8 {
    height: var(--spacing-8);
  }
  .h-full {
    height: 100%;
  }
  .h-lg {
    height: var(--height-lg);
  }
  .h-md {
    height: var(--height-md);
  }
  .h-sm {
    height: var(--height-sm);
  }
  .h-xl {
    height: var(--height-xl);
  }
  .h-xs {
    height: var(--height-xs);
  }
  .max-h-\[300px\] {
    max-height: 300px;
  }
  .min-h-lg {
    min-height: var(--height-lg);
  }
  .min-h-md {
    min-height: var(--height-md);
  }
  .min-h-sm {
    min-height: var(--height-sm);
  }
  .min-h-xl {
    min-height: var(--height-xl);
  }
  .min-h-xs {
    min-height: var(--height-xs);
  }
  .w-3 {
    width: var(--spacing-3);
  }
  .w-4 {
    width: var(--spacing-4);
  }
  .w-5 {
    width: var(--spacing-5);
  }
  .w-6 {
    width: var(--spacing-6);
  }
  .w-7 {
    width: var(--spacing-7);
  }
  .w-8 {
    width: var(--spacing-8);
  }
  .w-10 {
    width: var(--spacing-10);
  }
  .w-12 {
    width: var(--spacing-12);
  }
  .w-14 {
    width: calc(var(--spacing) * 14);
  }
  .w-16 {
    width: var(--spacing-16);
  }
  .w-full {
    width: 100%;
  }
  .min-w-0 {
    min-width: var(--spacing-0);
  }
  .flex-1 {
    flex: 1;
  }
  .shrink-0 {
    flex-shrink: 0;
  }
  .cursor-ew-resize {
    cursor: ew-resize;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .cursor-wait {
    cursor: wait;
  }
  .touch-none {
    touch-action: none;
  }
  .resize {
    resize: both;
  }
  .resize-none {
    resize: none;
  }
  .\[appearance\:textfield\] {
    appearance: textfield;
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-1 {
    gap: var(--spacing-1);
  }
  .gap-2 {
    gap: var(--spacing-2);
  }
  .gap-3 {
    gap: var(--spacing-3);
  }
  .gap-4 {
    gap: var(--spacing-4);
  }
  .truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .overflow-auto {
    overflow: auto;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: var(--border-width-2);
  }
  .border-none {
    --tw-border-style: none;
    border-style: none;
  }
  .border-nes-accent {
    border-color: var(--color-nes-accent);
  }
  .border-nes-black {
    border-color: var(--color-nes-black);
  }
  .border-nes-error {
    border-color: var(--color-nes-error);
  }
  .border-nes-gray {
    border-color: var(--color-nes-gray);
  }
  .border-nes-primary {
    border-color: var(--color-nes-primary);
  }
  .border-nes-secondary {
    border-color: var(--color-nes-secondary);
  }
  .border-nes-success {
    border-color: var(--color-nes-success);
  }
  .border-nes-warning {
    border-color: var(--color-nes-warning);
  }
  .bg-blue-500 {
    background-color: var(--color-blue-500);
  }
  .bg-gray-500 {
    background-color: var(--color-gray-500);
  }
  .bg-nes-accent {
    background-color: var(--color-nes-accent);
  }
  .bg-nes-black {
    background-color: var(--color-nes-black);
  }
  .bg-nes-error {
    background-color: var(--color-nes-error);
  }
  .bg-nes-error\/10 {
    background-color: color-mix(in srgb, #fe7269 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-nes-error) 10%, transparent);
    }
  }
  .bg-nes-primary {
    background-color: var(--color-nes-primary);
  }
  .bg-nes-secondary {
    background-color: var(--color-nes-secondary);
  }
  .bg-nes-success {
    background-color: var(--color-nes-success);
  }
  .bg-nes-warning {
    background-color: var(--color-nes-warning);
  }
  .bg-transparent {
    background-color: transparent;
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .p-0\.5 {
    padding: calc(var(--spacing) * 0.5);
  }
  .p-1 {
    padding: var(--spacing-1);
  }
  .p-4 {
    padding: var(--spacing-4);
  }
  .px-2 {
    padding-inline: var(--spacing-2);
  }
  .px-3 {
    padding-inline: var(--spacing-3);
  }
  .px-4 {
    padding-inline: var(--spacing-4);
  }
  .px-6 {
    padding-inline: var(--spacing-6);
  }
  .px-8 {
    padding-inline: var(--spacing-8);
  }
  .py-1 {
    padding-block: var(--spacing-1);
  }
  .py-2 {
    padding-block: var(--spacing-2);
  }
  .py-3 {
    padding-block: var(--spacing-3);
  }
  .py-4 {
    padding-block: var(--spacing-4);
  }
  .py-5 {
    padding-block: var(--spacing-5);
  }
  .text-left {
    text-align: left;
  }
  .font-family-pixel {
    font-family: var(--font-family-pixel);
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .text-black {
    color: var(--color-black);
  }
  .text-nes-black {
    color: var(--color-nes-black);
  }
  .text-nes-error {
    color: var(--color-nes-error);
  }
  .text-nes-gray-dark {
    color: var(--color-nes-gray-dark);
  }
  .text-white {
    color: var(--color-white);
  }
  .opacity-75 {
    opacity: 75%;
  }
  .shadow-\[2px_2px_0_0_theme\(colors\.nes\.black\)\] {
    --tw-shadow: 2px 2px 0 0 var(--tw-shadow-color, #000000);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-\[4px_4px_0_0_theme\(colors\.nes\.black\)\] {
    --tw-shadow: 4px 4px 0 0 var(--tw-shadow-color, #000000);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .transition-none {
    transition-property: none;
  }
  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }
  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }
  .placeholder\:text-nes-gray {
    &::placeholder {
      color: var(--color-nes-gray);
    }
  }
  .read-only\:cursor-default {
    &:read-only {
      cursor: default;
    }
  }
  .read-only\:bg-nes-gray\/10 {
    &:read-only {
      background-color: color-mix(in srgb, #a1a1a1 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-nes-gray) 10%, transparent);
      }
    }
  }
  .focus-within\:shadow-\[3px_3px_0_0_theme\(colors\.nes\.black\)\] {
    &:focus-within {
      --tw-shadow: 3px 3px 0 0 var(--tw-shadow-color, #000000);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .hover\:border-nes-accent-hover {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-nes-accent-hover);
      }
    }
  }
  .hover\:border-nes-error-hover {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-nes-error-hover);
      }
    }
  }
  .hover\:border-nes-primary-hover {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-nes-primary-hover);
      }
    }
  }
  .hover\:border-nes-secondary-hover {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-nes-secondary-hover);
      }
    }
  }
  .hover\:border-nes-success-hover {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-nes-success-hover);
      }
    }
  }
  .hover\:border-nes-warning-hover {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-nes-warning-hover);
      }
    }
  }
  .hover\:bg-nes-accent-hover {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-nes-accent-hover);
      }
    }
  }
  .hover\:bg-nes-error-hover {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-nes-error-hover);
      }
    }
  }
  .hover\:bg-nes-gray\/10 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #a1a1a1 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-nes-gray) 10%, transparent);
        }
      }
    }
  }
  .hover\:bg-nes-primary-hover {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-nes-primary-hover);
      }
    }
  }
  .hover\:bg-nes-secondary-hover {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-nes-secondary-hover);
      }
    }
  }
  .hover\:bg-nes-success-hover {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-nes-success-hover);
      }
    }
  }
  .hover\:bg-nes-warning-hover {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-nes-warning-hover);
      }
    }
  }
  .hover\:text-white {
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .hover\:shadow-\[3px_3px_0_0_theme\(colors\.nes\.accent-hover\)\] {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 3px 3px 0 0 var(--tw-shadow-color, #093e00);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .hover\:shadow-\[3px_3px_0_0_theme\(colors\.nes\.black\)\] {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 3px 3px 0 0 var(--tw-shadow-color, #000000);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .hover\:shadow-\[3px_3px_0_0_theme\(colors\.nes\.error-hover\)\] {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 3px 3px 0 0 var(--tw-shadow-color, #d64339);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .hover\:shadow-\[3px_3px_0_0_theme\(colors\.nes\.primary-hover\)\] {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 3px 3px 0 0 var(--tw-shadow-color, #00237c);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .hover\:shadow-\[3px_3px_0_0_theme\(colors\.nes\.secondary-hover\)\] {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 3px 3px 0 0 var(--tw-shadow-color, #c92ed9);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .hover\:shadow-\[3px_3px_0_0_theme\(colors\.nes\.success-hover\)\] {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 3px 3px 0 0 var(--tw-shadow-color, #51df21);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .hover\:shadow-\[3px_3px_0_0_theme\(colors\.nes\.warning-hover\)\] {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 3px 3px 0 0 var(--tw-shadow-color, #7d8400);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .hover\:brightness-90 {
    &:hover {
      @media (hover: hover) {
        --tw-brightness: brightness(90%);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
      }
    }
  }
  .focus\:shadow-\[3px_3px_0_0_theme\(colors\.nes\.black\)\] {
    &:focus {
      --tw-shadow: 3px 3px 0 0 var(--tw-shadow-color, #000000);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-2 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-nes-primary {
    &:focus {
      --tw-ring-color: var(--color-nes-primary);
    }
  }
  .focus\:ring-offset-0 {
    &:focus {
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .focus\:outline-none {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .focus-visible\:bg-nes-gray\/20 {
    &:focus-visible {
      background-color: color-mix(in srgb, #a1a1a1 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-nes-gray) 20%, transparent);
      }
    }
  }
  .focus-visible\:ring-2 {
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus-visible\:ring-nes-accent {
    &:focus-visible {
      --tw-ring-color: var(--color-nes-accent);
    }
  }
  .focus-visible\:ring-nes-black {
    &:focus-visible {
      --tw-ring-color: var(--color-nes-black);
    }
  }
  .focus-visible\:ring-nes-error {
    &:focus-visible {
      --tw-ring-color: var(--color-nes-error);
    }
  }
  .focus-visible\:ring-nes-gray {
    &:focus-visible {
      --tw-ring-color: var(--color-nes-gray);
    }
  }
  .focus-visible\:ring-nes-primary {
    &:focus-visible {
      --tw-ring-color: var(--color-nes-primary);
    }
  }
  .focus-visible\:ring-nes-secondary {
    &:focus-visible {
      --tw-ring-color: var(--color-nes-secondary);
    }
  }
  .focus-visible\:ring-nes-success {
    &:focus-visible {
      --tw-ring-color: var(--color-nes-success);
    }
  }
  .focus-visible\:ring-nes-warning {
    &:focus-visible {
      --tw-ring-color: var(--color-nes-warning);
    }
  }
  .focus-visible\:ring-offset-2 {
    &:focus-visible {
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .active\:translate-y-px {
    &:active {
      --tw-translate-y: 1px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .active\:translate-y-px {
    &:active {
      --tw-translate-y: var(--spacing-px);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .active\:bg-nes-gray\/20 {
    &:active {
      background-color: color-mix(in srgb, #a1a1a1 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-nes-gray) 20%, transparent);
      }
    }
  }
  .disabled\:cursor-not-allowed {
    &:disabled {
      cursor: not-allowed;
    }
  }
  .disabled\:opacity-40 {
    &:disabled {
      opacity: 40%;
    }
  }
  .disabled\:opacity-50 {
    &:disabled {
      opacity: 50%;
    }
  }
  .disabled\:opacity-60 {
    &:disabled {
      opacity: 60%;
    }
  }
  .disabled\:grayscale {
    &:disabled {
      --tw-grayscale: grayscale(100%);
      filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
    }
  }
  .disabled\:hover\:bg-transparent {
    &:disabled {
      &:hover {
        @media (hover: hover) {
          background-color: transparent;
        }
      }
    }
  }
  .data-\[checked\]\:block {
    &[data-checked] {
      display: block;
    }
  }
  .data-\[checked\]\:translate-x-full {
    &[data-checked] {
      --tw-translate-x: 100%;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-\[checked\]\:border-nes-accent {
    &[data-checked] {
      border-color: var(--color-nes-accent);
    }
  }
  .data-\[checked\]\:border-nes-black {
    &[data-checked] {
      border-color: var(--color-nes-black);
    }
  }
  .data-\[checked\]\:border-nes-error {
    &[data-checked] {
      border-color: var(--color-nes-error);
    }
  }
  .data-\[checked\]\:border-nes-gray {
    &[data-checked] {
      border-color: var(--color-nes-gray);
    }
  }
  .data-\[checked\]\:border-nes-primary {
    &[data-checked] {
      border-color: var(--color-nes-primary);
    }
  }
  .data-\[checked\]\:border-nes-secondary {
    &[data-checked] {
      border-color: var(--color-nes-secondary);
    }
  }
  .data-\[checked\]\:border-nes-success {
    &[data-checked] {
      border-color: var(--color-nes-success);
    }
  }
  .data-\[checked\]\:border-nes-warning {
    &[data-checked] {
      border-color: var(--color-nes-warning);
    }
  }
  .data-\[checked\]\:bg-nes-accent {
    &[data-checked] {
      background-color: var(--color-nes-accent);
    }
  }
  .data-\[checked\]\:bg-nes-black {
    &[data-checked] {
      background-color: var(--color-nes-black);
    }
  }
  .data-\[checked\]\:bg-nes-error {
    &[data-checked] {
      background-color: var(--color-nes-error);
    }
  }
  .data-\[checked\]\:bg-nes-gray {
    &[data-checked] {
      background-color: var(--color-nes-gray);
    }
  }
  .data-\[checked\]\:bg-nes-primary {
    &[data-checked] {
      background-color: var(--color-nes-primary);
    }
  }
  .data-\[checked\]\:bg-nes-secondary {
    &[data-checked] {
      background-color: var(--color-nes-secondary);
    }
  }
  .data-\[checked\]\:bg-nes-success {
    &[data-checked] {
      background-color: var(--color-nes-success);
    }
  }
  .data-\[checked\]\:bg-nes-warning {
    &[data-checked] {
      background-color: var(--color-nes-warning);
    }
  }
  .data-\[checked\]\:bg-white {
    &[data-checked] {
      background-color: var(--color-white);
    }
  }
  .data-\[checked\]\:shadow-\[2px_2px_0_0_theme\(colors\.nes\.black\)\] {
    &[data-checked] {
      --tw-shadow: 2px 2px 0 0 var(--tw-shadow-color, #000000);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .data-\[disabled\]\:cursor-not-allowed {
    &[data-disabled] {
      cursor: not-allowed;
    }
  }
  .data-\[disabled\]\:opacity-50 {
    &[data-disabled] {
      opacity: 50%;
    }
  }
  .data-\[disabled\]\:opacity-60 {
    &[data-disabled] {
      opacity: 60%;
    }
  }
  .data-\[disabled\]\:grayscale {
    &[data-disabled] {
      --tw-grayscale: grayscale(100%);
      filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
    }
  }
  .data-\[ending-style\]\:opacity-0 {
    &[data-ending-style] {
      opacity: 0%;
    }
  }
  .data-\[highlighted\]\:bg-nes-primary {
    &[data-highlighted] {
      background-color: var(--color-nes-primary);
    }
  }
  .data-\[highlighted\]\:text-white {
    &[data-highlighted] {
      color: var(--color-white);
    }
  }
  .data-\[indeterminate\]\:border-nes-accent {
    &[data-indeterminate] {
      border-color: var(--color-nes-accent);
    }
  }
  .data-\[indeterminate\]\:border-nes-error {
    &[data-indeterminate] {
      border-color: var(--color-nes-error);
    }
  }
  .data-\[indeterminate\]\:border-nes-gray {
    &[data-indeterminate] {
      border-color: var(--color-nes-gray);
    }
  }
  .data-\[indeterminate\]\:border-nes-primary {
    &[data-indeterminate] {
      border-color: var(--color-nes-primary);
    }
  }
  .data-\[indeterminate\]\:border-nes-secondary {
    &[data-indeterminate] {
      border-color: var(--color-nes-secondary);
    }
  }
  .data-\[indeterminate\]\:border-nes-success {
    &[data-indeterminate] {
      border-color: var(--color-nes-success);
    }
  }
  .data-\[indeterminate\]\:border-nes-warning {
    &[data-indeterminate] {
      border-color: var(--color-nes-warning);
    }
  }
  .data-\[indeterminate\]\:bg-nes-accent {
    &[data-indeterminate] {
      background-color: var(--color-nes-accent);
    }
  }
  .data-\[indeterminate\]\:bg-nes-error {
    &[data-indeterminate] {
      background-color: var(--color-nes-error);
    }
  }
  .data-\[indeterminate\]\:bg-nes-gray {
    &[data-indeterminate] {
      background-color: var(--color-nes-gray);
    }
  }
  .data-\[indeterminate\]\:bg-nes-primary {
    &[data-indeterminate] {
      background-color: var(--color-nes-primary);
    }
  }
  .data-\[indeterminate\]\:bg-nes-secondary {
    &[data-indeterminate] {
      background-color: var(--color-nes-secondary);
    }
  }
  .data-\[indeterminate\]\:bg-nes-success {
    &[data-indeterminate] {
      background-color: var(--color-nes-success);
    }
  }
  .data-\[indeterminate\]\:bg-nes-warning {
    &[data-indeterminate] {
      background-color: var(--color-nes-warning);
    }
  }
  .data-\[invalid\]\:border-nes-error {
    &[data-invalid] {
      border-color: var(--color-nes-error);
    }
  }
  .data-\[invalid\]\:text-nes-error {
    &[data-invalid] {
      color: var(--color-nes-error);
    }
  }
  .data-\[open\]\:rotate-180 {
    &[data-open] {
      rotate: 180deg;
    }
  }
  .data-\[open\]\:opacity-100 {
    &[data-open] {
      opacity: 100%;
    }
  }
  .data-\[placeholder\]\:text-nes-gray {
    &[data-placeholder] {
      color: var(--color-nes-gray);
    }
  }
  .data-\[readonly\]\:cursor-default {
    &[data-readonly] {
      cursor: default;
    }
  }
  .data-\[readonly\]\:bg-nes-gray\/10 {
    &[data-readonly] {
      background-color: color-mix(in srgb, #a1a1a1 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-nes-gray) 10%, transparent);
      }
    }
  }
  .data-\[selected\]\:bg-nes-accent {
    &[data-selected] {
      background-color: var(--color-nes-accent);
    }
  }
  .data-\[selected\]\:text-black {
    &[data-selected] {
      color: var(--color-black);
    }
  }
  .data-\[starting-style\]\:opacity-0 {
    &[data-starting-style] {
      opacity: 0%;
    }
  }
  .data-\[unchecked\]\:hidden {
    &[data-unchecked] {
      display: none;
    }
  }
  .data-\[unchecked\]\:translate-x-0 {
    &[data-unchecked] {
      --tw-translate-x: var(--spacing-0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-\[unchecked\]\:bg-white {
    &[data-unchecked] {
      background-color: var(--color-white);
    }
  }
  .dark\:border-nes-white {
    @media (prefers-color-scheme: dark) {
      border-color: var(--color-nes-white);
    }
  }
  .dark\:bg-nes-error\/20 {
    @media (prefers-color-scheme: dark) {
      background-color: color-mix(in srgb, #fe7269 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-nes-error) 20%, transparent);
      }
    }
  }
  .dark\:bg-nes-gray-dark {
    @media (prefers-color-scheme: dark) {
      background-color: var(--color-nes-gray-dark);
    }
  }
  .dark\:bg-nes-white {
    @media (prefers-color-scheme: dark) {
      background-color: var(--color-nes-white);
    }
  }
  .dark\:text-black {
    @media (prefers-color-scheme: dark) {
      color: var(--color-black);
    }
  }
  .dark\:text-nes-gray {
    @media (prefers-color-scheme: dark) {
      color: var(--color-nes-gray);
    }
  }
  .dark\:text-nes-white {
    @media (prefers-color-scheme: dark) {
      color: var(--color-nes-white);
    }
  }
  .dark\:shadow-\[2px_2px_0_0_theme\(colors\.nes\.white\)\] {
    @media (prefers-color-scheme: dark) {
      --tw-shadow: 2px 2px 0 0 var(--tw-shadow-color, #ffffff);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .dark\:shadow-\[4px_4px_0_0_theme\(colors\.nes\.white\)\] {
    @media (prefers-color-scheme: dark) {
      --tw-shadow: 4px 4px 0 0 var(--tw-shadow-color, #ffffff);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .dark\:read-only\:bg-nes-gray-dark\/50 {
    @media (prefers-color-scheme: dark) {
      &:read-only {
        background-color: color-mix(in srgb, #585858 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-nes-gray-dark) 50%, transparent);
        }
      }
    }
  }
  .dark\:focus-within\:shadow-\[3px_3px_0_0_theme\(colors\.nes\.white\)\] {
    @media (prefers-color-scheme: dark) {
      &:focus-within {
        --tw-shadow: 3px 3px 0 0 var(--tw-shadow-color, #ffffff);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .dark\:hover\:bg-nes-white\/10 {
    @media (prefers-color-scheme: dark) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, #ffffff 10%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-nes-white) 10%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:shadow-\[3px_3px_0_0_theme\(colors\.nes\.white\)\] {
    @media (prefers-color-scheme: dark) {
      &:hover {
        @media (hover: hover) {
          --tw-shadow: 3px 3px 0 0 var(--tw-shadow-color, #ffffff);
          box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        }
      }
    }
  }
  .dark\:focus\:shadow-\[3px_3px_0_0_theme\(colors\.nes\.white\)\] {
    @media (prefers-color-scheme: dark) {
      &:focus {
        --tw-shadow: 3px 3px 0 0 var(--tw-shadow-color, #ffffff);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .dark\:focus\:ring-nes-secondary {
    @media (prefers-color-scheme: dark) {
      &:focus {
        --tw-ring-color: var(--color-nes-secondary);
      }
    }
  }
  .dark\:focus-visible\:bg-nes-white\/20 {
    @media (prefers-color-scheme: dark) {
      &:focus-visible {
        background-color: color-mix(in srgb, #ffffff 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-nes-white) 20%, transparent);
        }
      }
    }
  }
  .dark\:focus-visible\:ring-nes-secondary {
    @media (prefers-color-scheme: dark) {
      &:focus-visible {
        --tw-ring-color: var(--color-nes-secondary);
      }
    }
  }
  .dark\:focus-visible\:ring-nes-white {
    @media (prefers-color-scheme: dark) {
      &:focus-visible {
        --tw-ring-color: var(--color-nes-white);
      }
    }
  }
  .dark\:active\:bg-nes-white\/20 {
    @media (prefers-color-scheme: dark) {
      &:active {
        background-color: color-mix(in srgb, #ffffff 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-nes-white) 20%, transparent);
        }
      }
    }
  }
  .dark\:disabled\:opacity-30 {
    @media (prefers-color-scheme: dark) {
      &:disabled {
        opacity: 30%;
      }
    }
  }
  .dark\:disabled\:opacity-40 {
    @media (prefers-color-scheme: dark) {
      &:disabled {
        opacity: 40%;
      }
    }
  }
  .dark\:disabled\:brightness-75 {
    @media (prefers-color-scheme: dark) {
      &:disabled {
        --tw-brightness: brightness(75%);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
      }
    }
  }
  .dark\:data-\[checked\]\:border-nes-white {
    @media (prefers-color-scheme: dark) {
      &[data-checked] {
        border-color: var(--color-nes-white);
      }
    }
  }
  .dark\:data-\[checked\]\:bg-nes-gray-dark {
    @media (prefers-color-scheme: dark) {
      &[data-checked] {
        background-color: var(--color-nes-gray-dark);
      }
    }
  }
  .dark\:data-\[checked\]\:bg-nes-white {
    @media (prefers-color-scheme: dark) {
      &[data-checked] {
        background-color: var(--color-nes-white);
      }
    }
  }
  .dark\:data-\[checked\]\:shadow-\[2px_2px_0_0_theme\(colors\.nes\.white\)\] {
    @media (prefers-color-scheme: dark) {
      &[data-checked] {
        --tw-shadow: 2px 2px 0 0 var(--tw-shadow-color, #ffffff);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .dark\:data-\[disabled\]\:opacity-40 {
    @media (prefers-color-scheme: dark) {
      &[data-disabled] {
        opacity: 40%;
      }
    }
  }
  .dark\:data-\[disabled\]\:brightness-75 {
    @media (prefers-color-scheme: dark) {
      &[data-disabled] {
        --tw-brightness: brightness(75%);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
      }
    }
  }
  .dark\:data-\[indeterminate\]\:border-nes-white {
    @media (prefers-color-scheme: dark) {
      &[data-indeterminate] {
        border-color: var(--color-nes-white);
      }
    }
  }
  .dark\:data-\[indeterminate\]\:shadow-\[2px_2px_0_0_theme\(colors\.nes\.white\)\] {
    @media (prefers-color-scheme: dark) {
      &[data-indeterminate] {
        --tw-shadow: 2px 2px 0 0 var(--tw-shadow-color, #ffffff);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .dark\:data-\[placeholder\]\:text-nes-gray {
    @media (prefers-color-scheme: dark) {
      &[data-placeholder] {
        color: var(--color-nes-gray);
      }
    }
  }
  .dark\:data-\[selected\]\:text-black {
    @media (prefers-color-scheme: dark) {
      &[data-selected] {
        color: var(--color-black);
      }
    }
  }
  .dark\:data-\[unchecked\]\:bg-nes-gray-dark {
    @media (prefers-color-scheme: dark) {
      &[data-unchecked] {
        background-color: var(--color-nes-gray-dark);
      }
    }
  }
  .\[\&\:\:-webkit-inner-spin-button\]\:appearance-none {
    &::-webkit-inner-spin-button {
      appearance: none;
    }
  }
  .\[\&\:\:-webkit-outer-spin-button\]\:appearance-none {
    &::-webkit-outer-spin-button {
      appearance: none;
    }
  }
}
@layer base {
  img, canvas {
    image-rendering: pixelated;
    image-rendering: -moz-crisp-edges;
    image-rendering: crisp-edges;
  }
  body, html {
    -webkit-font-smoothing: none;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeSpeed;
  }
}
@layer utilities {
  .font-pixel {
    font-family: var(--font-family-pixel);
  }
  .pixel-render {
    image-rendering: pixelated;
    image-rendering: -moz-crisp-edges;
    image-rendering: crisp-edges;
  }
  .pixel-text {
    -webkit-font-smoothing: none;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeSpeed;
  }
  .pixel-instant {
    transition: none !important;
  }
  .pixel-border {
    box-shadow: 2px 0 0 0 currentColor,  0 2px 0 0 currentColor,  -2px 0 0 0 currentColor,  0 -2px 0 0 currentColor;
  }
  .pixel-border-3d {
    box-shadow: -4px -4px 0 0 rgb(255 255 255 / 0.3),  4px 4px 0 0 rgb(0 0 0 / 0.3),  -4px 0 0 0 rgb(255 255 255 / 0.3),  0 -4px 0 0 rgb(255 255 255 / 0.3),  4px 0 0 0 rgb(0 0 0 / 0.3),  0 4px 0 0 rgb(0 0 0 / 0.3);
  }
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-border-style: solid;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
    }
  }
}
